High
====

* Website and documentation (Use Sphinx)

* Merge OS branch with main branch

* Packaging:
  
  SimX Macports package
  SimX apt-get package
  SimX fedora package
  Update PyPI package with recent changes

* More parallel application examples including one with visualization (ubigraph?)

* Make SimEngine work without MPI

* Make SimEngine work with single-threaded MPI

* Local_min_delay should be settable to 0

* Time literals functionality (time should be specifiable in SECS, mSECS, uSECS etc.)



Medium
======


* DebugStream -- prevent useless null writes

* Major refactor and trimming of C++ legacy code (Can we remove Boost dependency?)

* Decide: Do we want to maintain ability to write pure C++ simulations?

* Export ServiceName object so that it can be provided in log files

* Export EntityID object so that it can be printed in logs

* Remove smart_assert and use Boost's own smart assert

* Apply for SimX v0.2 license

* Script for auto-updating and prefixing copyrights

* Script for auto-tagging release versions

* Phold/Qhold SimX implementation?


Low
===

* Rename C++ *.h -> *.hh for emacs highlighting

* Compiler #ifdefs to compile out debug streams for production runs

* Combine SimX with an optimistic simulation engine
